@using Radzen.Blazor.Rendering
@using VeterinarSite.Shared.Models.EventsModel
@using VeterinarSite.Shared.Services.Events
@inject DialogService DialogService
@inject IEventsService _Events;
<RadzenTemplateForm TItem="AppointmentModel" Data="@model" Submit=@OnSubmit>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Text" />
        </div>
        <div class="col">
            <RadzenTextBox @bind-Value="@model.Text" Name="Text" />
            <RadzenRequiredValidator Text="Title is required" Component="Text" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Start" />
        </div>
        <div class="col">
            <RadzenDatePicker @bind-Value="@model.Start" Name="Start" ShowTime="true" />
            <RadzenRequiredValidator Text="Start is required" Component="Start" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="End" />
        </div>
        <div class="col">
            <RadzenDatePicker Name="End" @bind-Value="@model.End" ShowTime="true" />
            <RadzenRequiredValidator Component="End" Text="End is required" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col">
            <RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
        </div>
    </div>
</RadzenTemplateForm>
@code {
   
  [Parameter]
  public  AppointmentModel model { get; set; }


    private async void  OnSubmit(AppointmentModel model)
    {
        await _Events.Edit(model);
        DialogService.Close(model);
    }
}